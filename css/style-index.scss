.landingPage {
	position: fixed;
	top: 0;
	left: 0;
	width: 100vw;
	height: 100vh;
	display: flex;
	flex-direction: column;
	align-items: center;
    justify-content: center;
	overflow: hidden;
	// padding-bottom: 100px;
	background-color: var(--fillColor);
	border: var(--stroke) solid var(--strokeColor);
	z-index: 999999;

	.textLandingPage {
		position: relative;
		display: flex;

		p {
		}
	}

	.logoLandingPage {
		display: flex;
		height: 40px;
		gap: 3%;
		margin-bottom: 100px;

		svg {
			height: 100%;
			overflow: hidden;
		}

		.kLDP {
			fill: var(--red) !important;
		}
		.oLDP {
			margin-left: -2%;
			fill: var(--strokeColor);
		}
		.mLDP {
			fill: var(--green) !important;
		}
		.aLDP {
			fill: var(--blue) !important;
		}
	}
}
.heroSection {
	position: relative;
	display: block;
	width: 100%;
	height: auto;
	overflow: hidden;

	.section1 {
		position: relative;
		display: flex;
		width: 100%;
		height: 100vh;
		padding: 0px var(--dis);
		gap: var(--dis);
		align-items: flex-end;
		border-bottom: none;
		padding-bottom: 50px;
		z-index: 1;

		.kHero {fill: var(--red) !important;}
		.oHero {fill: var(--text);}
		.mHero {fill: var(--green) !important;}
		.aHero {fill: var(--blue) !important;}


		.strokeLine {
			position: absolute;
			top: 0;
			width: 1px;
			height: 100%;
			background-color: var(--strokeColor);
		}
		.strokeLine1 {
			left: -1px;
		}
		.strokeLine2 {
			left: auto;
			right: -1px;
		}
	}
	.section2 {
		position: relative;
		display: flex;
		width: 100%;
		height: 50vh;

		.square1 {
			position: relative;
			border-top: var(--stroke) solid var(--strokeColor);
			flex-basis: calc(100% / 2);
			backdrop-filter: blur(40px);
			padding-top: var(--dis);
			padding-left: var(--dis);
			z-index: 1;
			text-transform: uppercase;
		}

		.square2 {
			position: relative;
			border-top: var(--stroke) solid var(--strokeColor);
			flex-basis: calc(100% / 2);
			backdrop-filter: blur(40px);
			padding-top: var(--dis);
			padding-left: var(--dis);
			z-index: 2;
			// p {
			// 	max-width: 400px;	
			// }
		}
		.square1:before, .square2:before{
			content: "";
			position: absolute;
			top: 0;
			left: 0;
			width: 100%;
			height: 100%;
			z-index: -1;
			background-color: var(--fillColor);
			opacity: 0.8;
			transition: background-color .6s ease-out;
		}
	}
}


.section3 {
	border-bottom: none;
}

.section4-wrapper {
	z-index: 11;

	background-color: var(--white);
}
.section4 {
	border-top: var(--stroke) solid var(--black);
	position: relative;
	display: flex;
	flex-direction: column;
	width: 100%;
	height: 100%;
	z-index: 11;
	background-color: var(--white);
	// overflow: hidden;

	#workSelectionThumb {
		position: absolute;
		top: 0;
		left: 0;
		width: 100%;
		height: 100%;
		z-index: 10;
		user-select: none !important;
		pointer-events: none !important;

		.thumbMove {
			position: absolute;
			top: 0;
			left: 0;
			height: 300px;
			// background-color: greenyellow;
			user-select: none !important;
			pointer-events: none !important;

			.visible {
				opacity: 0;
				scale: 0;
				filter: hue-rotate(90deg) sepia(50%) blur(5px);
				// filter: blur(5px);
				width: 100%;
				height: 100%;
				translate: -15% -50%;
				// overflow: hidden;
				transition: all .4s ease-in-out;
				user-select: none !important;
				pointer-events: none !important;

				video, img {
					translate: -15% 0%;
					position: absolute;
					height: 100%;
					filter: url(#filterNoise);
					opacity: 0;
					transition: opacity 0.5s ease-out;
					user-select: none !important;
					pointer-events: none !important;
				}
			}
		}
	}

	#workSelectionThumb.hovering {
		.thumbMove {
			.visible {
				opacity: 1;
				scale: 1;
				filter: hue-rotate(0deg) sepia(0%) blur(0px);
				transition: all .3s ease-out, scale .5s ease-out;

				video, img {
					animation: imgHovering .5s ease-in-out;
				}
			}
		}
	}

	@keyframes imgHovering {
		0%, 100% {
			scale: 1;
		}; 50% {
			scale: 1.08;
		}
		
	}

	.workSelection {
		--gapText: 32px;

		position: relative;
		display: flex;
		align-items: center;
		width: 100%;
		height: 40vh;
		max-height: 250px;
		min-height: 200px;
		padding-left: 5%;
		padding-right: 2.5%;
		z-index: 1;
		overflow: hidden;

		.text{
			position: relative;
			display: flex;
			width: 100%;
			align-items: center;
			justify-content: space-between;
			z-index: 20;
			// background-color: seagreen;

			.frontText {
				position: relative;
				display: flex;
				align-items: center;
				// background-color: dimgrey;

				.heading {
					margin-left: var(--gapText);
				}
			}
			.endText{
				// background-color: skyblue;
				position: relative;
				display: flex;
				align-items: center;
				height: 100%;

				.arrow {
					// background-color: yellowgreen;
					height: 80px;
					margin-left: var(--gapText);
					overflow: hidden;
					transition: all 1s ease;

					svg {
						height: 100%;
						fill: none !important;
						stroke: var(--black);
						stroke-width: 8px;
						stroke-miterlimit: 10px;
					}
				}
			}

			p {
				color: var(--black);
			}
		}

		.curtainHover {
			--transition: all .4s ease-out;

			position: absolute;
			display: block;
			top: 0;
			left: 0;
			width: 100%;
			height: 100%;
			overflow: hidden;
			z-index: 1;

			.curtainContainer {
				position: absolute;
				top: 0;
				left: 0;
				translate: 0 -100%;
				width: 100%;
				height: 100%;
				background-color: var(--maincolor);
				transition: var(--transition);
				overflow: hidden;
			}
		}
	}
	.workSelection.none, .workSelection.none.up, .workSelection.none.down {
		.curtainHover {
			.curtainContainer {
				transition: all 0s ease;
			}
		}
	}
	.workSelection.up {

		.curtainHover {

			.curtainContainer {
				translate: 0 -100%;
				transition: var(--transition);
			}
		}
	}.workSelection.down {

		.curtainHover {

			.curtainContainer {
				translate: 0 100%;
				transition: var(--transition);
			}
		}
	}
	.workSelection.hovering {

		.text {
			.endText {
				.arrow {
					svg {
						animation: svgAnimation .7s ease-in-out;
					}
				}	
			}
		}
		@keyframes svgAnimation {
			0%, 100% {
				translate: 0% 0%;
			};
			49% {
				translate: 100% -100%;
			};
			49.1% {
				translate: -100% 100%;
			}
		}

		.curtainHover {

			.curtainContainer {
				translate: 0 0;
				transition: var(--transition);
			}
		}
	}
	.workSelection.domie {
		--maincolor: var(--red);
	}
	.workSelection.proE {
		--maincolor: var(--green);
	}
	.workSelection.skrt {
		--maincolor: var(--blue);
	}
}