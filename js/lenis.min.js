! function(t, e) {
    "object" == typeof exports && "undefined" != typeof module ? module.exports = e() : "function" == typeof define && define.amd ? define(e) : (t || self).Lenis = e()
}(this, function() {
    var t = 0;

    function e(e) {
        return "__private_" + t++ + "_" + e
    }

    function i(t, e) {
        if (!Object.prototype.hasOwnProperty.call(t, e)) throw new TypeError("attempted to use private field on non-instance");
        return t
    }
    let o = () => ({
        events: {},
        emit(t, ...e) {
            let i = this.events[t] || [];
            for (let t = 0, o = i.length; t < o; t++) i[t](...e)
        },
        on(t, e) {
            return this.events[t]?.push(e) || (this.events[t] = [e]), () => {
                this.events[t] = this.events[t]?.filter(t => e !== t)
            }
        }
    });

    function n(t, e, i) {
        return Math.max(t, Math.min(e, i))
    }
    var r = /*#__PURE__*/ function() {
            function t() {}
            var e = t.prototype;
            return e.advance = function(t) {
                var e;
                if (this.isRunning) {
                    var i, o = !1;
                    if (this.lerp) this.value = (1 - (i = this.lerp)) * this.value + i * this.to, Math.round(this.value) === this.to && (this.value = this.to, o = !0);
                    else {
                        this.currentTime += t;
                        var r = n(0, this.currentTime / this.duration, 1),
                            s = (o = r >= 1) ? 1 : this.easing(r);
                        this.value = this.from + (this.to - this.from) * s
                    }
                    null == (e = this.onUpdate) || e.call(this, this.value, {
                        completed: o
                    }), o && this.stop()
                }
            }, e.stop = function() {
                this.isRunning = !1
            }, e.fromTo = function(t, e, i) {
                var o = i.lerp,
                    n = void 0 === o ? .1 : o,
                    r = i.duration,
                    s = void 0 === r ? 1 : r,
                    l = i.easing,
                    h = void 0 === l ? function(t) {
                        return t
                    } : l,
                    a = i.onUpdate;
                this.from = this.value = t, this.to = e, this.lerp = n, this.duration = s, this.easing = h, this.currentTime = 0, this.isRunning = !0, this.onUpdate = a
            }, t
        }(),
        s = /*#__PURE__*/ e("resizeObserver"),
        l = /*#__PURE__*/ e("onResize"),
        h = /*#__PURE__*/ e("onWindowResize"),
        a = /*#__PURE__*/ function() {
            function t(t) {
                var e = this;
                Object.defineProperty(this, s, {
                    writable: !0,
                    value: void 0
                }), Object.defineProperty(this, l, {
                    writable: !0,
                    value: function(t) {
                        var i = t[0];
                        if (i) {
                            var o = i.contentRect,
                                n = o.height;
                            e.width = o.width, e.height = n
                        }
                    }
                }), Object.defineProperty(this, h, {
                    writable: !0,
                    value: function() {
                        e.width = window.innerWidth, e.height = window.innerHeight
                    }
                }), this.element = t, t === window ? (window.addEventListener("resize", i(this, h)[h]), i(this, h)[h]()) : (this.width = this.element.offsetWidth, this.height = this.element.offsetHeight, i(this, s)[s] = new ResizeObserver(i(this, l)[l]), i(this, s)[s].observe(this.element))
            }
            return t.prototype.destroy = function() {
                window.removeEventListener("resize", this.onWindowResize), i(this, s)[s].disconnect()
            }, t
        }(),
        c = /*#__PURE__*/ e("wheelMultiplier"),
        u = /*#__PURE__*/ e("touchMultiplier"),
        d = /*#__PURE__*/ e("normalizeWheel"),
        p = /*#__PURE__*/ e("touchStart"),
        v = /*#__PURE__*/ e("emitter"),
        m = /*#__PURE__*/ e("onTouchStart"),
        f = /*#__PURE__*/ e("onTouchMove"),
        g = /*#__PURE__*/ e("onWheel"),
        w = /*#__PURE__*/ function() {
            function t(t, e) {
                var r = this,
                    s = e.wheelMultiplier,
                    l = void 0 === s ? 1 : s,
                    h = e.touchMultiplier,
                    a = void 0 === h ? 2 : h,
                    w = e.normalizeWheel,
                    y = void 0 !== w && w;
                Object.defineProperty(this, c, {
                    writable: !0,
                    value: void 0
                }), Object.defineProperty(this, u, {
                    writable: !0,
                    value: void 0
                }), Object.defineProperty(this, d, {
                    writable: !0,
                    value: void 0
                }), Object.defineProperty(this, p, {
                    writable: !0,
                    value: void 0
                }), Object.defineProperty(this, v, {
                    writable: !0,
                    value: void 0
                }), Object.defineProperty(this, m, {
                    writable: !0,
                    value: function(t) {
                        var e = t.targetTouches ? t.targetTouches[0] : t,
                            o = e.pageX,
                            n = e.pageY;
                        i(r, p)[p].x = o, i(r, p)[p].y = n
                    }
                }), Object.defineProperty(this, f, {
                    writable: !0,
                    value: function(t) {
                        var e = t.targetTouches ? t.targetTouches[0] : t,
                            o = e.pageX,
                            n = e.pageY,
                            s = -(o - i(r, p)[p].x) * i(r, u)[u],
                            l = -(n - i(r, p)[p].y) * i(r, u)[u];
                        i(r, p)[p].x = o, i(r, p)[p].y = n, i(r, v)[v].emit("scroll", {
                            type: "touch",
                            deltaX: s,
                            deltaY: l,
                            event: t
                        })
                    }
                }), Object.defineProperty(this, g, {
                    writable: !0,
                    value: function(t) {
                        var e = t.deltaX,
                            o = t.deltaY;
                        i(r, d)[d] && (e = n(-100, e, 100), o = n(-100, o, 100)), e *= i(r, c)[c], o *= i(r, c)[c], i(r, v)[v].emit("scroll", {
                            type: "wheel",
                            deltaX: e,
                            deltaY: o,
                            event: t
                        })
                    }
                }), this.element = t, i(this, c)[c] = l, i(this, u)[u] = a, i(this, d)[d] = y, i(this, p)[p] = {
                    x: null,
                    y: null
                }, i(this, v)[v] = o(), this.element.addEventListener("wheel", i(this, g)[g], {
                    passive: !1
                }), this.element.addEventListener("touchstart", i(this, m)[m], {
                    passive: !1
                }), this.element.addEventListener("touchmove", i(this, f)[f], {
                    passive: !1
                })
            }
            var e = t.prototype;
            return e.on = function(t, e) {
                return i(this, v)[v].on(t, e)
            }, e.destroy = function() {
                i(this, v)[v].events = {}, this.element.removeEventListener("wheel", i(this, g)[g], {
                    passive: !1
                }), this.element.removeEventListener("touchstart", i(this, m)[m], {
                    passive: !1
                }), this.element.removeEventListener("touchmove", i(this, f)[f], {
                    passive: !1
                })
            }, t
        }(); /*#__PURE__*/
    return function() {
        function t(t) {
            var e = this,
                i = void 0 === t ? {} : t,
                n = i.direction,
                s = i.gestureDirection,
                l = i.mouseMultiplier,
                h = i.smooth,
                c = i.wrapper,
                u = void 0 === c ? window : c,
                d = i.content,
                p = void 0 === d ? document.documentElement : d,
                v = i.smoothWheel,
                m = void 0 === v ? null == h || h : v,
                f = i.smoothTouch,
                g = void 0 !== f && f,
                y = i.duration,
                S = i.easing,
                b = void 0 === S ? function(t) {
                    return Math.min(1, 1.001 - Math.pow(2, -10 * t))
                } : S,
                L = i.lerp,
                O = void 0 === L ? y ? null : .1 : L,
                E = i.infinite,
                M = void 0 !== E && E,
                T = i.orientation,
                _ = void 0 === T ? null != n ? n : "vertical" : T,
                z = i.gestureOrientation,
                j = void 0 === z ? null != s ? s : "vertical" : z,
                P = i.touchMultiplier,
                k = void 0 === P ? 2 : P,
                W = i.wheelMultiplier,
                R = void 0 === W ? null != l ? l : 1 : W,
                H = i.normalizeWheel,
                x = void 0 === H || H;
            this.onVirtualScroll = function(t) {
                var i = t.type,
                    o = t.deltaX,
                    n = t.deltaY,
                    r = t.event;
                if (!r.ctrlKey && !("vertical" === e.options.gestureOrientation && 0 === n || "horizontal" === e.options.gestureOrientation && 0 === o || r.composedPath().find(function(t) {
                        return null == t || null == t.hasAttribute ? void 0 : t.hasAttribute("data-lenis-prevent")
                    })))
                    if (e.isStopped || e.isLocked) r.preventDefault();
                    else {
                        if (e.isSmooth = e.options.smoothTouch && "touch" === i || e.options.smoothWheel && "wheel" === i, !e.isSmooth) return e.isScrolling = !1, void e.animate.stop();
                        r.preventDefault();
                        var s = n;
                        "both" === e.options.gestureOrientation ? s = o + n : "horizontal" === e.options.gestureOrientation && (s = o), e.scrollTo(e.targetScroll + s, {
                            programmatic: !1
                        })
                    }
            }, this.onScroll = function() {
                if (!e.isScrolling) {
                    var t = e.animatedScroll;
                    e.animatedScroll = e.targetScroll = e.actualScroll, e.velocity = 0, e.direction = Math.sign(e.animatedScroll - t), e.emit()
                }
            }, n && console.warn("Lenis: `direction` option is deprecated, use `orientation` instead"), s && console.warn("Lenis: `gestureDirection` option is deprecated, use `gestureOrientation` instead"), l && console.warn("Lenis: `mouseMultiplier` option is deprecated, use `wheelMultiplier` instead"), h && console.warn("Lenis: `smooth` option is deprecated, use `smoothWheel` instead"), window.lenisVersion = "1.0.0-dev.7", u !== document.documentElement && u !== document.body || (u = window), this.options = {
                wrapper: u,
                content: p,
                smoothWheel: m,
                smoothTouch: g,
                duration: y,
                easing: b,
                lerp: O,
                infinite: M,
                gestureOrientation: j,
                orientation: _,
                touchMultiplier: k,
                wheelMultiplier: R,
                normalizeWheel: x
            }, this.wrapper = new a(u), this.content = new a(p), this.rootElement.classList.add("lenis"), this.velocity = 0, this.isStopped = !1, this.isSmooth = m || g, this.isScrolling = !1, this.targetScroll = this.animatedScroll = this.actualScroll, this.animate = new r, this.emitter = o(), this.wrapper.element.addEventListener("scroll", this.onScroll, {
                passive: !1
            }), this.virtualScroll = new w(u, {
                touchMultiplier: k,
                wheelMultiplier: R,
                normalizeWheel: x
            }), this.virtualScroll.on("scroll", this.onVirtualScroll)
        }
        var e, i, s = t.prototype;
        return s.destroy = function() {
            this.emitter.events = {}, this.wrapper.element.removeEventListener("scroll", this.onScroll, {
                passive: !1
            }), this.virtualScroll.destroy()
        }, s.on = function(t, e) {
            return this.emitter.on(t, e)
        }, s.off = function(t, e) {
            var i;
            this.emitter.events[t] = null == (i = this.emitter.events[t]) ? void 0 : i.filter(function(t) {
                return e !== t
            })
        }, s.setScroll = function(t) {
            this.isHorizontal ? this.rootElement.scrollLeft = t : this.rootElement.scrollTop = t
        }, s.emit = function() {
            this.emitter.emit("scroll", this)
        }, s.reset = function() {
            this.isLocked = !1, this.isScrolling = !1, this.velocity = 0
        }, s.start = function() {
            this.isStopped = !1, this.reset()
        }, s.stop = function() {
            this.isStopped = !0, this.animate.stop(), this.reset()
        }, s.raf = function(t) {
            var e = t - (this.time || t);
            this.time = t, this.animate.advance(.001 * e)
        }, s.scrollTo = function(t, e) {
            var i = this,
                o = void 0 === e ? {} : e,
                r = o.offset,
                s = void 0 === r ? 0 : r,
                l = o.immediate,
                h = void 0 !== l && l,
                a = o.lock,
                c = void 0 !== a && a,
                u = o.duration,
                d = void 0 === u ? this.options.duration : u,
                p = o.easing,
                v = void 0 === p ? this.options.easing : p,
                m = o.lerp,
                f = void 0 === m ? !d && this.options.lerp : m,
                g = o.onComplete,
                w = o.force,
                y = o.programmatic,
                S = void 0 === y || y;
            if (!this.isStopped || void 0 !== w && w) {
                if (["top", "left", "start"].includes(t)) t = 0;
                else if (["bottom", "right", "end"].includes(t)) t = this.limit;
                else {
                    var b, L;
                    if ("string" == typeof t ? L = document.querySelector(t) : null != (b = t) && b.nodeType && (L = t), L) {
                        if (this.wrapper.element !== window) {
                            var O = this.wrapper.element.getBoundingClientRect();
                            s -= this.isHorizontal ? O.left : O.top
                        }
                        var E = L.getBoundingClientRect();
                        t = (this.isHorizontal ? E.left : E.top) + this.animatedScroll
                    }
                }
                if ("number" == typeof t) {
                    if (t += s, t = Math.round(t), this.options.infinite ? S && (this.targetScroll = this.animatedScroll = this.scroll) : t = n(0, t, this.limit), h) return this.animatedScroll = this.targetScroll = t, this.setScroll(this.scroll), this.animate.stop(), this.reset(), this.emit(), void(null == g || g());
                    S || (this.targetScroll = t), this.animate.fromTo(this.animatedScroll, t, {
                        duration: d,
                        easing: v,
                        lerp: f,
                        onUpdate: function(t, e) {
                            var o = e.completed;
                            c && (i.isLocked = !0), i.isScrolling = !0, i.velocity = t - i.animatedScroll, i.direction = Math.sign(i.velocity), i.animatedScroll = t, i.setScroll(i.scroll), S && (i.targetScroll = t), o && (c && (i.isLocked = !1), requestAnimationFrame(function() {
                                i.isScrolling = !1
                            }), i.velocity = 0, null == g || g()), i.emit()
                        }
                    })
                }
            }
        }, e = t, (i = [{
            key: "rootElement",
            get: function() {
                return this.wrapper.element === window ? this.content.element : this.wrapper.element
            }
        }, {
            key: "limit",
            get: function() {
                return Math.round(this.isHorizontal ? this.content.width - this.wrapper.width : this.content.height - this.wrapper.height)
            }
        }, {
            key: "isHorizontal",
            get: function() {
                return "horizontal" === this.options.orientation
            }
        }, {
            key: "actualScroll",
            get: function() {
                return this.isHorizontal ? this.rootElement.scrollLeft : this.rootElement.scrollTop
            }
        }, {
            key: "scroll",
            get: function() {
                return this.options.infinite ? (e = this.animatedScroll % (t = this.limit), (t > 0 && e < 0 || t < 0 && e > 0) && (e += t), e) : this.animatedScroll;
                var t, e
            }
        }, {
            key: "progress",
            get: function() {
                return this.scroll / this.limit
            }
        }, {
            key: "isSmooth",
            get: function() {
                return this.__isSmooth
            },
            set: function(t) {
                this.__isSmooth !== t && (this.rootElement.classList.toggle("lenis-smooth", t), this.__isSmooth = t)
            }
        }, {
            key: "isScrolling",
            get: function() {
                return this.__isScrolling
            },
            set: function(t) {
                this.__isScrolling !== t && (this.rootElement.classList.toggle("lenis-scrolling", t), this.__isScrolling = t)
            }
        }, {
            key: "isStopped",
            get: function() {
                return this.__isStopped
            },
            set: function(t) {
                this.__isStopped !== t && (this.rootElement.classList.toggle("lenis-stopped", t), this.__isStopped = t)
            }
        }]) && function(t, e) {
            for (var i = 0; i < e.length; i++) {
                var o = e[i];
                o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(t, "symbol" == typeof(n = function(t, e) {
                    if ("object" != typeof t || null === t) return t;
                    var i = t[Symbol.toPrimitive];
                    if (void 0 !== i) {
                        var o = i.call(t, "string");
                        if ("object" != typeof o) return o;
                        throw new TypeError("@@toPrimitive must return a primitive value.")
                    }
                    return String(t)
                }(o.key)) ? n : String(n), o)
            }
            var n
        }(e.prototype, i), Object.defineProperty(e, "prototype", {
            writable: !1
        }), t
    }()
});